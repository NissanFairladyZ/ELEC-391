// -------------------------------------------------------------
// 
// File Name: C:\Users\bryan\Downloads\viterbi\gm_hdlcoder_commviterbi\Viterbi_Decoder_Subsystem.v
// Created: 2024-06-16 16:50:07
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1
// Target subsystem base rate: 1
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// Out                           ce_out        1
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Viterbi_Decoder_Subsystem
// Source Path: gm_hdlcoder_commviterbi/Viterbi Decoder Subsystem
// Hierarchy Level: 0
// Model version: 10.10
// 
// Simulink model description for gm_hdlcoder_commviterbi:
// 
// Viterbi Decoder Using Simulink(R) Blocks
// This model shows how to use HDL Coder(TM) to check, generate,
// and verify HDL for a fixed-point Viterbi decoder model built using Simulink(R) blocks.
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Viterbi_Decoder_Subsystem
          (clk,
           reset,
           clk_enable,
           In,
           ce_out,
           Out);


  input   clk;
  input   reset;
  input   clk_enable;
  input   In;
  output  ce_out;
  output  Out;


  wire CE_out1_0;
  wire CE_out1_1;
  wire Viterbi_Decoder1_out1;


  CE u_CE (.clk(clk),
           .reset(reset),
           .enb(clk_enable),
           .CE_in(In),
           .CE_out_0(CE_out1_0),  // boolean
           .CE_out_1(CE_out1_1)  // boolean
           );

  Viterbi_Decoder1 u_Viterbi_Decoder1 (.clk(clk),
                                       .reset(reset),
                                       .enb(clk_enable),
                                       .Viterbi_Decoder1_in_0(CE_out1_0),  // boolean
                                       .Viterbi_Decoder1_in_1(CE_out1_1),  // boolean
                                       .decoded(Viterbi_Decoder1_out1)
                                       );

  assign Out = Viterbi_Decoder1_out1;

  assign ce_out = clk_enable;

endmodule  // Viterbi_Decoder_Subsystem

