// -------------------------------------------------------------
// 
// File Name: C:\Users\bryan\Downloads\viterbi\gm_hdlcoder_commviterbi\CE.v
// Created: 2024-06-16 16:50:07
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: CE
// Source Path: gm_hdlcoder_commviterbi/Viterbi Decoder Subsystem/CE
// Hierarchy Level: 1
// Model version: 10.10
// 
// Convolutional Encoder Block
// 
// poly2trellis(3,[6 7])
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module CE
          (clk,
           reset,
           enb,
           CE_in,
           CE_out_0,
           CE_out_1);


  input   clk;
  input   reset;
  input   enb;
  input   CE_in;
  output  CE_out_0;  // boolean
  output  CE_out_1;  // boolean


  reg  [1:0] shift1_reg;  // ufix1 [2]
  wire [2:0] sreg1out;  // boolean [3]
  wire sreg1out_0;
  wire sreg1out_1;
  wire encoded_entry1;
  wire sreg1out_2;
  wire encoded_entry2;


  // Shift Register for Constraint Length 3
  always @(posedge clk or posedge reset)
    begin : shift1_process
      if (reset == 1'b1) begin
        shift1_reg <= {2{1'b0}};
      end
      else begin
        if (enb) begin
          shift1_reg[0] <= CE_in;
          shift1_reg[1] <= shift1_reg[0];
        end
      end
    end

  assign sreg1out[0] = CE_in;
  assign sreg1out[32'sd2:32'sd1] = shift1_reg[32'sd1:32'sd0];



  assign sreg1out_0 = sreg1out[0];

  assign sreg1out_1 = sreg1out[1];

  // Output Polynomial: [6]
  assign encoded_entry1 = sreg1out_0 ^ sreg1out_1;



  assign CE_out_0 = encoded_entry1;

  assign sreg1out_2 = sreg1out[2];

  // Output Polynomial: [7]
  assign encoded_entry2 = sreg1out_2 ^ (sreg1out_0 ^ sreg1out_1);



  assign CE_out_1 = encoded_entry2;

endmodule  // CE

